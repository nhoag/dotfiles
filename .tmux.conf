# Initialize sessions.
bind S source-file ~/.tmux/sess.work
bind H source-file ~/.tmux/sess.blog

# Renumber windows sequentially after closing any of them.
set -g renumber-windows on

# Use vi keybindings for tmux commandline input.
set -g status-keys vi

# Reload tmux config.
bind r source-file ~/.tmux.conf \; display "Reloaded!"

set -g default-terminal "xterm-256color"
set -g status on

set-option -g allow-rename off

# Custom prefix.
unbind C-b
set -g prefix C-Space
bind Space copy-mode
bind C-Space copy-mode

# Split window vertically and horizonally.
bind | split-window -h -c "#{pane_current_path}"
bind _ split-window -v -c "#{pane_current_path}"

bind-key w kill-window
bind-key C-q kill-window
bind-key W kill-window -a

bind-key x kill-pane
bind-key C-x kill-pane

setw -g aggressive-resize on

# Copy to macOS clipboard.
bind-key -Tcopy-mode-vi 'v' send -X begin-selection
bind-key -Tcopy-mode-vi 'y' send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Use vim keybindings in copy mode.
setw -g mode-keys vi

# Speed up commands.
set-option -sg escape-time 0

# Clear the current pane.
bind -n C-k send-keys C-l \; clear-history

# Set window name when creating a new window.
bind-key c command-prompt -p "window name:" "new-window; rename-window '%%'"

# Status update interval.
set -g status-interval 1

# Start file/pane index at 1 for improved usability.
set -g base-index 1
setw -g pane-base-index 1

# Resize panes like vim.
bind < resize-pane -L 10
bind > resize-pane -R 10
bind - resize-pane -D 10
bind + resize-pane -U 10

# Theme configuration.
#
# @see: https://github.com/jimeh/tmux-themepack
if-shell "[[ -f $HOME/.tmux/themes/tmux-themepack/basic.tmuxtheme ]]" "source-file $HOME/.tmux/themes/tmux-themepack/basic.tmuxtheme"

