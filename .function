# shellcheck disable=SC1117

# Homebrew update, upgrade, cleanup, doctor.
if [[ "$OSTYPE" =~ darwin* ]]; then
  function bs() {
    # shellcheck disable=SC2155
    local LOGFILE="/tmp/brewlog-$(/bin/date -j '+%Y%m%d')"
    local YELLOW="\033[1;33m"
    local NC="\033[0m"

    echo "${YELLOW}LOGFILE:${NC} $LOGFILE"
    for command in update upgrade cleanup doctor; do
      # shellcheck disable=SC2028
      echo "\n${YELLOW}COMMAND:${NC} ${command}\n"
      brew "$command" 2>&1 |
        tee -a "$LOGFILE"
    done
  }
fi

# Remove line number from file.
function rml() {
  local FILE=${2:-"${HOME}/.ssh/known_hosts"}
  local LINE=$1
  if [[ "$OSTYPE" =~ darwin* ]]; then
    local sedcmd=gsed
  else
    local sedcmd=sed
  fi
  "$sedcmd" -i -e "${LINE}d" "${FILE}"
}

# Open Drupal project webpage.
function dp() {
  if [[ "$OSTYPE" =~ darwin* ]]; then
    local opencmd=open
  else
    local opencmd=xdg-open
  fi
  "$opencmd" "https://www.drupal.org/project/${1}"
}

# Fast Vim:Shell Switching.
function fancy-ctrl-z() {
  if [[ $#BUFFER -eq 0 ]]; then
    # shellcheck disable=SC2034
    BUFFER="fg"
    zle accept-line
  else
    zle push-input
    zle clear-screen
  fi
}
zle -N fancy-ctrl-z
bindkey '^Z' fancy-ctrl-z

# SSH Public Key Fingerprints.
#
# @see: https://serverfault.com/a/413247
function fingerprints() {
  local hash=${2:-'md5'}
  local file="$1"
  while read -r l; do
    [[ -n $l && ${l###} == "$l" ]] && ssh-keygen -E "${hash}" -l -f /dev/stdin <<<"$l"
  done <"$file"
}

# HTTP Status info.
function hs() {
  curl -sk "https://httpstat.us/${1}"
  echo
}

# Create directory and cd.
function mcd() {
  mkdir -p "$1" && cd "$1" || return 1
}

# Generate a random alpha-numeric string.
#
# Default: 15 characters.
function rand() {
  local LENGTH=${1:-15}
  date +%s |
    shasum |
    base64 |
    head -c "$LENGTH" |
    tr '[:upper:]' '[:lower:]'
  echo
}

# Collapsed FISH-style working directory.
#
# @see: https://github.com/robbyrussell/oh-my-zsh/blob/c3b072eace1ce19a48e36c2ead5932ae2d2e06d9/themes/fishy.zsh-theme#L3-L10
_fishy_collapsed_wd() {
  pwd | perl -pe '
    BEGIN {
      binmode STDIN,  ":encoding(UTF-8)";
      binmode STDOUT, ":encoding(UTF-8)";
    }; s|^$ENV{HOME}|~|g; s|/([^/.])[^/]*(?=/)|/$1|g; s|/\.([^/])[^/]*(?=/)|/.$1|g
  '
}
